---
import type { HTMLAttributes } from 'astro/types';
import { cva } from 'class-variance-authority';
import { cn } from '@/lib/utils';

interface Props extends HTMLAttributes<'button'> {
	variant?: 'contained' | 'outlined' | 'text';
	color?: 'primary';
	size?: 'medium';
	className?: string;
	disabled?: boolean;
}

const { className, variant, color, size, ...restProps } = Astro.props;

const iconButtonVariants = cva(
	'inline-flex items-center justify-center whitespace-nowrap cursor-pointer transition-all duration-300 shadow-xs',
	{
		variants: {
			variant: {
				contained:
					'shadow-xs disabled:pointer-events-none disabled:bg-grayscale-100 disabled:text-grayscale-500',
				outlined:
					'border shadow-xs disabled:pointer-events-none disabled:border-grayscale-300 disabled:text-grayscale-500',
				text: 'disabled:pointer-events-none disabled:text-grayscale-500'
			},
			size: {
				extraSmall: 'p-2 rounded-[10px]',
				small: 'p-2.5 rounded-xl',
				medium: 'p-3 rounded-xl',
				large: 'p-3 rounded-xl'
			},
			color: {
				primary: ''
			}
		},
		compoundVariants: [
			{
				variant: 'contained',
				color: 'primary',
				className:
					'bg-primary text-common-white hover:bg-primary-700 focus:bg-primary-700 active:bg-primary-900'
			},
			{
				variant: 'outlined',
				color: 'primary',
				className:
					'border-primary text-primary hover:bg-primary-100 focus:bg-primary-100 active:bg-primary-300/50'
			},
			{
				variant: 'text',
				color: 'primary',
				className: 'text-primary hover:bg-primary-100 focus:bg-primary-100 active:bg-primary-300/50'
			}
		],
		defaultVariants: {
			variant: 'contained',
			size: 'medium',
			color: 'primary'
		}
	}
);

const IconVariants = cva('', {
	variants: {
		size: {
			medium: 'h-6 w-6 text-xl'
		}
	},
	defaultVariants: {
		size: 'medium'
	}
});
---

<button class={cn(iconButtonVariants({ variant, color, size, className }))} {...restProps}>
	<span class={IconVariants({ size })}>
		<slot />
	</span>
</button>
