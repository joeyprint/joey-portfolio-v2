---
import { type HTMLAttributes } from "astro/types";
import { cva } from "class-variance-authority";
import { cn } from "@/lib/utils";

type ButtonProps = HTMLAttributes<"button"> & {
  variant?: "contained" | "outlined" | "text";
  color?: "primary";
  className?: string;
};

const { className, variant, color, ...restProps } = Astro.props as ButtonProps;

const buttonVariants = cva(
  "joey_button inline-flex items-center justify-center whitespace-nowrap rounded-lg cursor-pointer transition-all duration-300 gap-1",
  {
    variants: {
      variant: {
        contained: "shadow-xs",
        outlined: "border shadow-xs",
        text: "",
      },
      size: {
        medium: "px-3 py-2",
      },
      color: {
        primary: "",
      },
    },
    compoundVariants: [
      {
        variant: "contained",
        color: "primary",
        className:
          "bg-primary text-common-white hover:bg-primary-700 focus:bg-primary-700 active:bg-primary-900",
      },
      {
        variant: "outlined",
        color: "primary",
        className:
          "border-primary text-primary hover:bg-primary-100 focus:bg-primary-100 active:bg-primary-300/50",
      },
      {
        variant: "text",
        color: "primary",
        className:
          "text-primary hover:bg-primary-100 focus:bg-primary-100 active:bg-primary-300/50",
      },
    ],
    defaultVariants: {
      variant: "contained",
      color: "primary",
      size: "medium",
    },
  }
);
---

<button
  class={cn(buttonVariants({ variant, color, className }))}
  {...restProps}
>
  <slot />
</button>
